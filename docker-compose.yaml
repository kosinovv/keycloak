version: '3.8'
services:
  #app:
  #  build:
  #    context: .
  #    dockerfile: DockerfileApp
  #  container_name: kosinov_keycloak
  #  ports:
  #    - 8081:8081
  #  depends_on:
  #    - keycloak
  #  environment:
  #    KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
  #    SPRING_KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
  #    SPRING_SECURITY_OAUTH2_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/kosinov-keycloak-realm
  #    SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/kosinov-keycloak-realm
  keycloak:
    build:
      context: .
      dockerfile: DockerfileKeycloak
    container_name: keycloak
    command:
      - start
      - --http-enabled=true
      - --health-enabled=true
      - --import-realm
      - --db=postgres
    environment:
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB_URL: jdbc:postgresql://postgres_k:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_SCHEMA: public
    ports:
      - 8080:8080
    depends_on:
      postgres_k:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master" ]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
  postgres_k:
    image: postgres
    container_name: postgres_k
    ports:
      - 5432:5432
    environment:
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_DB=postgres'
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
volumes:
  postgres-data: